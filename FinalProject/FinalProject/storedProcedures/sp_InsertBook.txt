--sp_InsertBook
--Ian Suddreth 8/1/2016

GO

IF EXISTS(SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE SPECIFIC_NAME = 'sp_InsertBook')
	DROP PROCEDURE sp_InsertBook;

GO 


CREATE PROCEDURE sp_InsertBook
    @PublisherID smallint OUTPUT
  , @ShelfID smallint
  , @BookName nvarchar(50)
  , @AuthorName nvarchar(50)
  , @SecondAuthorName nvarchar(50) NULL
  , @ThirdAuthorName nvarchar(50) NULL

AS 
BEGIN
	DECLARE @AuthorID smallint
	DECLARE @BookID smallint

	INSERT INTO Book(PublisherID, ShelfID, BookName, BookCost, BookStatus) 
	VALUES (@PublisherID,@ShelfID,@BookName,5,'A');

	SET @BookID = @@IDENTITY

	IF NOT EXISTS (SELECT * FROM Author WHERE AuthorName = @AuthorName)
	BEGIN 

	 INSERT INTO Author(AuthorName) VALUES(@AuthorName)

	END

	SET @AuthorID = (SELECT AuthorID FROM Author WHERE AuthorName = @AuthorName) 

	INSERT INTO BookAuthor(BookID, AuthorID, BookAuthorOrdinal) VALUES (@BookID,@AuthorID, 1)

	IF @SecondAuthorName IS NOT NULL
	BEGIN
		IF NOT EXISTS (SELECT * FROM Author WHERE AuthorName = @SecondAuthorName)
		BEGIN 

		 INSERT INTO Author(AuthorName) VALUES(@SecondAuthorName)

		END

		SET @AuthorID = (SELECT AuthorID FROM Author WHERE AuthorName = @SecondAuthorName) 

		INSERT INTO BookAuthor(BookID, AuthorID, BookAuthorOrdinal) VALUES (@BookID,@AuthorID, 2)
	END

	IF @ThirdAuthorName IS NOT NULL
	BEGIN
		IF NOT EXISTS (SELECT * FROM Author WHERE AuthorName = @ThirdAuthorName)
		BEGIN 

		 INSERT INTO Author(AuthorName) VALUES(@ThirdAuthorName)

		END

		SET @AuthorID = (SELECT AuthorID FROM Author WHERE AuthorName = @ThirdAuthorName) 

		INSERT INTO BookAuthor(BookID, AuthorID, BookAuthorOrdinal) VALUES (@BookID,@AuthorID, 3)
	END
END